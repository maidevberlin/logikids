services:
  frontend-dev:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5153:80"
    volumes:
      - ./packages/frontend:/app
    environment:
      - NODE_ENV=development
    networks:
      - app-network

  frontend-prod:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.prod
    ports:
      - "5154:80"
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  backend-dev:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.dev
    ports:
      - "5175:3000"
    volumes:
      - ./packages/backend:/app
      - ./prompts:/app/prompts
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://logikids:${POSTGRES_PASSWORD:-development}@postgres:5432/logikids
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  backend-prod:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.prod
    ports:
      - "5176:3000"
    volumes:
      - ./prompts:/app/prompts
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://logikids:${POSTGRES_PASSWORD:-development}@postgres:5432/logikids
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  backend-test:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.test
    volumes:
      - ./packages/backend:/app
      - ./prompts:/app/prompts
    environment:
      - NODE_ENV=test
    networks:
      - app-network

  postgres:
    image: postgres:16-alpine
    container_name: logikids-postgres
    environment:
      POSTGRES_DB: logikids
      POSTGRES_USER: logikids
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-development}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./packages/backend/src/sync/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U logikids"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
